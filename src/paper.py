# -*- coding: utf-8 -*-
"""
Created on Wed Jul  6 11:07:34 2016

@author: hernandeza
"""

import data_utils as du
import numpy as np
#import prettyplotlib as ppl
import matplotlib.pyplot as plt
#from mpl_toolkits.mplot3d import Axes3D
#import brewer2mpl
import neural_network as nn
import instruments as inst
import QuantLib as ql
import pandas as pd
#import plotly.plotly as py
#import plotly.graph_objs as go

def get_fnn(middle='_adj_error_fnn_l4_e6_epoch200'):
    dates = np.load(du.data_dir + 'test_' + middle + '_dates.npy')
    values = np.load(du.data_dir + 'test_' + middle + '_values.npy')
    val_hist = np.load(du.data_dir + 'test_' + middle + '_val_hist.npy')
    train_hist = np.load(du.data_dir + 'test_' + middle + '_train_hist.npy')
    #start = dates.shape[0]*0.4
    #dates = dates[start:]
    #values = values[start:]
    return (dates, values, val_hist, train_hist)

#            values[i, 0] = origMeanError
#            values[i, 1] = histMeanError
#            values[i, 2] = meanErrorPrior
#            values[i, 3] = origObjective
#            values[i, 4] = histObjective
#            values[i, 5] = objectivePrior

def running_mean(x, N):
    cumsum = np.cumsum(np.insert(x, 0, 0)) 
    return (cumsum[N:] - cumsum[:-N]) / N 

def plot():
    #du.data_dir = "../data/"
    mark_read = 'adj_error_s'
    mark_write = 'adj_error_insample40_s'
    data_labels = ('Default Starting Point', 'Historical Starting Point', 'Feed-forward Neural Net')
    labels = ('225k_lr5em5_ex6_lay5_d20',)
    av_hist = np.empty((500, len(labels)))
    av_hist.fill(np.nan)
    max_len = 0
    for rank, label in enumerate(labels):
        dates, values, _, _ = get_fnn(mark_read + label)
        size = len(dates)
        origMeanError = values[:, 0].reshape((size, 1))*100
        histMeanError = values[:, 1].reshape((size, 1))*100
        origObjective = values[:, 3].reshape((size, 1))
        histObjective = values[:, 4].reshape((size, 1))
        meanErrorPrior = values[:, 2].reshape((size, 1))*100    
        objective = values[:, 5].reshape((size, 1))
        mean_data = np.concatenate((origMeanError, histMeanError, meanErrorPrior), axis=1)
        obje_data = np.concatenate((origObjective, histObjective, objective), axis=1)
    
        colors = ('#66c2a5', '#fc8d62', '#8da0cb')
        du.plot_data(dates, mean_data, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + label + '_vola_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Average Volatility Error', title_fontsize=26)
        du.plot_data(dates, obje_data, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + label + '_npv_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f}', 
                     ytick_fontsize=18, ytick_color='black',
                     title='NPV Mean Square Error', title_fontsize=26)
        
        _, _, val_hist, train_hist = get_fnn(mark_read + label)
        av_val = running_mean(val_hist, 30)
        av_hist[:av_val.shape[0], rank] = av_val
        if av_val.shape[0] > max_len:
            max_len = av_val.shape[0]
            
    av_hist = av_hist[:max_len, :]
    du.plot_data(None, av_hist, figsize=(22, 11), labels=labels, 
                 save=du.data_dir + mark_write + '_cross_validation_fnn.eps', xlabel='Epoch', 
                 legend_fontsize=22, legend_color='black', 
                 xlabel_fontsize=22, xlabel_color='black', 
                 ylabel_fontsize=22, ylabel_color='black',
                 xtick_fontsize=18, xtick_color='black', yticks_format='{:.3f}', 
                 ytick_fontsize=18, ytick_color='black')
      
def plot2():
    data_labels = ('Default Starting Point', 'FNN With Error Adjustment .15', 'FNN With Error Adjustement .2')
    dates, ad_values, ad_val, _ = get_fnn(middle='adj_error_s150k_d15')
    _, un_values, un_val, _ = get_fnn(middle='adj_error_s150k_d20')
    size = len(dates)
    origMeanError = ad_values[:, 0].reshape((size, 1))*100
    origObjective = ad_values[:, 3].reshape((size, 1))
    ad_mean_prior = ad_values[:, 2].reshape((size, 1))*100
    un_mean_prior = un_values[:, 2].reshape((size, 1))*100
    ad_obje_prior = ad_values[:, 5].reshape((size, 1))
    un_obje_prior = un_values[:, 5].reshape((size, 1))
    mean_data = np.concatenate((origMeanError, un_mean_prior, ad_mean_prior), axis=1)    
    obje_data = np.concatenate((origObjective, un_obje_prior, ad_obje_prior), axis=1)

    colors = ('#66c2a5', '#fc8d62', '#8da0cb')
    du.plot_data(dates, mean_data, figsize=(22, 12), labels=data_labels, 
                 save=du.data_dir + 'vola_error_fnn_unadj_vs_adj_error.eps', 
                 legend_fontsize=22, legend_color='black', colors=colors,
                 xlabel_fontsize=22, xlabel_color='black', 
                 ylabel_fontsize=22, ylabel_color='black',
                 xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                 ytick_fontsize=18, ytick_color='black')
    du.plot_data(dates, obje_data, figsize=(22, 12), labels=data_labels, 
                 save=du.data_dir + 'npv_error_fnn_unadj_vs_adj_error.eps', 
                 legend_fontsize=22, legend_color='black', colors=colors,
                 xlabel_fontsize=22, xlabel_color='black', 
                 ylabel_fontsize=22, ylabel_color='black',
                 xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f}', 
                 ytick_fontsize=18, ytick_color='black')

    if ad_val.shape[0] > un_val.shape[0]:
        max_len = ad_val.shape[0]
    else:
        max_len = un_val.shape[0]
    av_hist = np.empty((max_len, 2))
    av_hist.fill(np.nan)
    av_val = running_mean(ad_val, 10)
    av_hist[:av_val.shape[0], 0] = av_val
    av_val = running_mean(un_val, 10)
    av_hist[:av_val.shape[0], 1] = av_val
    data_labels = ('With Error Adjustement', 'Without Error Adjustment')
    du.plot_data(None, av_hist, figsize=(22, 11), labels=data_labels, 
                 save=du.data_dir + 'cross_validation_fnn_unadj_vs_adj_error.eps', xlabel='Epoch', 
                 legend_fontsize=22, legend_color='black', 
                 xlabel_fontsize=22, xlabel_color='black', 
                 ylabel_fontsize=22, ylabel_color='black',
                 xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f}', 
                 ytick_fontsize=18, ytick_color='black')


def plot4():
    swo = inst.get_swaptiongen(inst.hullwhite_analytic)
    df = pd.get_store(du.h5file)[swo.key_model]
    d1 = df.loc['2015-06-01']
    d2 = df.loc['2015-06-02']
    x1_orig = d1.loc['OrigParam0']
    x1_hist = d1.loc['HistParam0']
    x2_orig = d2.loc['OrigParam0']
    x2_hist = d2.loc['HistParam0']
    y1_orig = d1.loc['OrigParam1']
    y1_hist = d1.loc['HistParam1']
    y2_orig = d2.loc['OrigParam1']
    y2_hist = d2.loc['HistParam1']
    x_default = 0.1
    y_default = 0.01
    xmin = min(x_default, x1_orig, x2_orig, x1_hist, x2_hist)
    xmax = max(x_default, x1_orig, x2_orig, x1_hist, x2_hist)
    ymin = min(y_default, y1_orig, y2_orig, y1_hist, y2_hist)
    ymax = max(y_default, y1_orig, y2_orig, y1_hist, y2_hist)
    (X, Y, Z) = inst.local_hw_map(swo, '2015-06-02', [xmin, ymin], [xmax, ymax], nb_points=20)
    
    fig = plt.figure(figsize=(20, 20))
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(X, Y, Z, alpha=0.3, cstride=1, rstride=1, linewidth=0, antialiased=True)
    
    xpoints = np.array([x1_orig, x2_orig, x2_hist, x_default])
    ypoints = np.array([y1_orig, y2_orig, y2_hist, y_default])
    zpoints = np.zeros(xpoints.shape)
    for x,y,rank in zip(xpoints, ypoints, range(len(xpoints))):
        swo.model.setParams(ql.Array([x, y]))
        zpoints[rank] = swo.model.value(swo.model.params(), swo.helpers)
        
    ax.scatter(xpoints, ypoints, zpoints)
    plt.savefig('../data/surf.eps', bbox_inches="tight")  
    xpoints.shape = (4, 1)
    ypoints.shape = (4, 1)
    zpoints.shape = (4, 1)
    print(np.concatenate((xpoints, ypoints, zpoints), axis=1))
    return (X, Y, Z)


def plot_history(file_name):
    file_name = "../data_corr_mid_2014/" + file_name
    model = nn.read_model(file_name)
    data = np.array(model.history['history']['val_loss'])
    data.shape = (data.shape[0], 1)
    du.plot_data(None, data)
    return data

    
def g2_plot_all():
    #du.data_dir = "../data/"
    mark_read_1 = 'adj_err_s'
    mark_read_2 = '_mse_lr_1.0e-04_ex6_lay9_d20_bn_res_1_rlr_5.0e-01_rlrmin_5.0e-06_rlrpat_10_estop_41'
    mark_write = 'history_adj_err'
    data_labels = ('Simulated Annealing', 'Neural Network')
    labels = ('0.5_0-264', 
              '0.5_44-308', 
              '0.5_88-352', 
              '0.5_132-396', 
              '0.5_176-440', 
              '0.5_220-484',
              '0.5_264-528',
              '0.5_308-572',
              '0.5_352-616',
              '0.99_396-660', 
              '0.99_440-704', 
              '0.99_484-748', 
              '0.99_528-792', 
              '0.99_572-836', 
              '0.99_616-880')
    #labels = ('0.5_0-264', 
    #          '0.5_132-396', 
    #          '0.5_308-572', 
    #          '0.99_440-704', 
    #          '0.99_572-836')
    #labels = ('0.5_0-264',)
    
    #              '0.5_264-528',
    npv = None
    vola = None
    out_of_sample=264
    for rank, label in enumerate(labels):
        dates, values, _, _ = get_fnn(mark_read_1 + label + mark_read_2)
        if npv is None:
            npv = np.empty((dates.shape[0], len(data_labels)))
            npv.fill(np.nan)
            vola = np.empty((dates.shape[0], len(data_labels)))
            vola.fill(np.nan)
        
        lims = [int(x) for x in label.split('_')[1].split('-')]
        npv[lims[0]:, 1] = values[lims[0]:, 5] #Objective prior
        temp = values[lims[0]:, 4] #History
        temp3 = values[lims[0]:, 3] #Default starting point
        filt = temp3 < temp
        temp[filt] = temp3[filt]
        npv[lims[0]:, 0] = temp

        vola[lims[0]:, 1] = values[lims[0]:, 2]
        temp_v = values[lims[0]:, 1] #History
        temp3_v = values[lims[0]:, 0] #Default starting point
        filt = temp3_v < temp_v
        temp_v[filt] = temp3_v[filt]
        vola[lims[0]:, 0] = temp_v
    
    vola *= 100
    #colors = ('#66c2a5', '#fc8d62', '#8da0cb')
    colors = ('#fc8d62', '#8da0cb')
    du.plot_data(dates, npv, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + '_npv_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f}', 
                     ytick_fontsize=18, ytick_color='black',
                     title='NPV Mean Square Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    du.plot_data(dates, vola, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + '_vola_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Average Volatility Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    temp = vola[:, 1] - vola[:, 0]
    temp = temp.reshape((temp.shape[0], 1))
    du.plot_data(dates, temp, figsize=(21, 12), labels=None, 
                     save=du.data_dir + mark_write + '_vola_diff_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Difference in Average Volatility Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    
    
    
def g2_vola_heat_map():
    file_name = du.data_dir + 'swo_gbp_g2pp_nn_adj_err_s0.5_0-264_mse_lr_1.0e-04_ex6_lay9_d20_bn_res_1_rlr_5.0e-01_rlrmin_5.0e-06_rlrpat_10_estop_41.p'
    model = nn.read_model(file_name)
    
    model_dict = inst.g2
    swo = inst.get_swaptiongen(model_dict)
    errs = swo.history_heatmap(model, dates=swo._dates[264:308])

def g2_objective_graph():
    mark_read_1 = 'adj_err_s'
    mark_read_2 = '_mse_lr_1.0e-04_ex6_lay9_d20_bn_res_1_rlr_5.0e-01_rlrmin_5.0e-06_rlrpat_10_estop_41'
    mark_write = 'history_adj_err_4m'
    data_labels = ('Simulated Annealing', 'Neural Network')
    labels = ('0.5_0-264', 
              '0.5_44-308', 
              '0.5_88-352', 
              '0.5_132-396', 
              '0.5_176-440', 
              '0.5_220-484',
              '0.5_264-528',
              '0.5_308-572',
              '0.5_352-616',
              '0.99_396-660', 
              '0.99_440-704', 
              '0.99_484-748', 
              '0.99_528-792', 
              '0.99_572-836', 
              '0.99_616-880')
    
    labels = ('0.5_0-264',  
              '0.5_88-352',
              '0.5_176-440', 
              '0.5_264-528',
              '0.5_352-616', 
              '0.99_440-704', 
              '0.99_528-792', 
              '0.99_616-880')
    
    model_dict = inst.g2
    swo = inst.get_swaptiongen(model_dict)
    max_rank = len(labels)-1
    prev = 0
    
    npv = None
    vola = None    
    for rank, label in enumerate(labels):
        dates, values, _, _ = get_fnn(mark_read_1 + label + mark_read_2)
        if npv is None:
            npv = np.empty((dates.shape[0], len(data_labels)))
            npv.fill(np.nan)
            vola = np.empty((dates.shape[0], len(data_labels)))
            vola.fill(np.nan)
            out_of_sample = int(label.split('_')[1].split('-')[1])
            
        file_name = du.data_dir + 'swo_gbp_g2pp_nn_' + mark_read_1 + label + mark_read_2 + '.p'
        model = nn.read_model(file_name)
        if rank < max_rank:
            max_date = int(labels[rank+1].split('_')[1].split('-')[1])
        else:
            max_date = -1
        
        #Objective prior
        npv[prev:max_date, 1], vola[prev:max_date, 1] = swo.objective_values(model, prev, max_date)

        temp = values[prev:max_date, 4] #History
        temp3 = values[prev:max_date, 3] #Default starting point
        filt = temp3 < temp
        temp[filt] = temp3[filt]
        npv[prev:max_date, 0] = temp

        
        temp_v = values[prev:max_date, 1] #History
        temp3_v = values[prev:max_date, 0] #Default starting point
        filt = temp3_v < temp_v
        temp_v[filt] = temp3_v[filt]
        vola[prev:max_date, 0] = temp_v
        
        prev = max_date
        
    
    vola *= 100
    #colors = ('#66c2a5', '#fc8d62', '#8da0cb')
    colors = ('#fc8d62', '#8da0cb')
    du.plot_data(dates, npv, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + '_npv_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f}', 
                     ytick_fontsize=18, ytick_color='black',
                     title='NPV Mean Square Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    du.plot_data(dates, vola, figsize=(21, 12), labels=data_labels, 
                     save=du.data_dir + mark_write + '_vola_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Average Volatility Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    temp = vola[:, 1] - vola[:, 0]
    temp = temp.reshape((temp.shape[0], 1))
    du.plot_data(dates, temp, figsize=(21, 12), labels=None, 
                     save=du.data_dir + mark_write + '_vola_diff_error_fnn.eps', colors=colors,
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Difference in Average Volatility Error', title_fontsize=26,
                     out_of_sample=out_of_sample)
    
    
    return (npv, vola)
    
def rnn_optimizer():
    dates = np.array([
np.datetime64('2013-01-01'), 
np.datetime64('2013-01-02'), 
np.datetime64('2013-01-03'), 
np.datetime64('2013-01-04'), 
np.datetime64('2013-01-07'), 
np.datetime64('2013-01-08'), 
np.datetime64('2013-01-09'), 
np.datetime64('2013-01-10'), 
np.datetime64('2013-01-11'), 
np.datetime64('2013-01-14'), 
np.datetime64('2013-01-15'), 
np.datetime64('2013-01-16'), 
np.datetime64('2013-01-17'), 
np.datetime64('2013-01-18'), 
np.datetime64('2013-01-21'), 
np.datetime64('2013-01-22'), 
np.datetime64('2013-01-23'), 
np.datetime64('2013-01-24'), 
np.datetime64('2013-01-25'), 
np.datetime64('2013-01-28'), 
np.datetime64('2013-01-29'), 
np.datetime64('2013-01-30'), 
np.datetime64('2013-01-31'), 
np.datetime64('2013-02-01'), 
np.datetime64('2013-02-04'), 
np.datetime64('2013-02-05'), 
np.datetime64('2013-02-06'), 
np.datetime64('2013-02-07'), 
np.datetime64('2013-02-08'), 
np.datetime64('2013-02-11'), 
np.datetime64('2013-02-12'), 
np.datetime64('2013-02-13'), 
np.datetime64('2013-02-14'), 
np.datetime64('2013-02-15'), 
np.datetime64('2013-02-18'), 
np.datetime64('2013-02-19'), 
np.datetime64('2013-02-20'), 
np.datetime64('2013-02-21'), 
np.datetime64('2013-02-22'), 
np.datetime64('2013-02-25'), 
np.datetime64('2013-02-26'), 
np.datetime64('2013-02-27'), 
np.datetime64('2013-02-28'), 
np.datetime64('2013-03-01'), 
np.datetime64('2013-03-04'), 
np.datetime64('2013-03-05'), 
np.datetime64('2013-03-06'), 
np.datetime64('2013-03-07'), 
np.datetime64('2013-03-08'), 
np.datetime64('2013-03-11'), 
np.datetime64('2013-03-12'), 
np.datetime64('2013-03-13'), 
np.datetime64('2013-03-14'), 
np.datetime64('2013-03-15'), 
np.datetime64('2013-03-18'), 
np.datetime64('2013-03-19'), 
np.datetime64('2013-03-20'), 
np.datetime64('2013-03-21'), 
np.datetime64('2013-03-22'), 
np.datetime64('2013-03-25'), 
np.datetime64('2013-03-26'), 
np.datetime64('2013-03-27'), 
np.datetime64('2013-03-28'), 
np.datetime64('2013-03-29'), 
np.datetime64('2013-04-01'), 
np.datetime64('2013-04-02'), 
np.datetime64('2013-04-03'), 
np.datetime64('2013-04-04'), 
np.datetime64('2013-04-05'), 
np.datetime64('2013-04-08'), 
np.datetime64('2013-04-09'), 
np.datetime64('2013-04-10'), 
np.datetime64('2013-04-11'), 
np.datetime64('2013-04-12'), 
np.datetime64('2013-04-15'), 
np.datetime64('2013-04-16'), 
np.datetime64('2013-04-17'), 
np.datetime64('2013-04-18'), 
np.datetime64('2013-04-19'), 
np.datetime64('2013-04-22'), 
np.datetime64('2013-04-23'), 
np.datetime64('2013-04-24'), 
np.datetime64('2013-04-25'), 
np.datetime64('2013-04-26'), 
np.datetime64('2013-04-29'), 
np.datetime64('2013-04-30'), 
np.datetime64('2013-05-01'), 
np.datetime64('2013-05-02'), 
np.datetime64('2013-05-03'), 
np.datetime64('2013-05-06'), 
np.datetime64('2013-05-07'), 
np.datetime64('2013-05-08'), 
np.datetime64('2013-05-09'), 
np.datetime64('2013-05-10'), 
np.datetime64('2013-05-13'), 
np.datetime64('2013-05-14'), 
np.datetime64('2013-05-15'), 
np.datetime64('2013-05-16'), 
np.datetime64('2013-05-17'), 
np.datetime64('2013-05-20'), 
np.datetime64('2013-05-21'), 
np.datetime64('2013-05-22'), 
np.datetime64('2013-05-23'), 
np.datetime64('2013-05-24'), 
np.datetime64('2013-05-27'), 
np.datetime64('2013-05-28'), 
np.datetime64('2013-05-29'), 
np.datetime64('2013-05-30'), 
np.datetime64('2013-05-31'), 
np.datetime64('2013-06-03'), 
np.datetime64('2013-06-04'), 
np.datetime64('2013-06-05'), 
np.datetime64('2013-06-06'), 
np.datetime64('2013-06-07'), 
np.datetime64('2013-06-10'), 
np.datetime64('2013-06-11'), 
np.datetime64('2013-06-12'), 
np.datetime64('2013-06-13'), 
np.datetime64('2013-06-14'), 
np.datetime64('2013-06-17'), 
np.datetime64('2013-06-18'), 
np.datetime64('2013-06-19'), 
np.datetime64('2013-06-20'), 
np.datetime64('2013-06-21'), 
np.datetime64('2013-06-24'), 
np.datetime64('2013-06-25'), 
np.datetime64('2013-06-26'), 
np.datetime64('2013-06-27'), 
np.datetime64('2013-06-28'), 
np.datetime64('2013-07-01'), 
np.datetime64('2013-07-02'), 
np.datetime64('2013-07-03'), 
np.datetime64('2013-07-04'), 
np.datetime64('2013-07-05'), 
np.datetime64('2013-07-08'), 
np.datetime64('2013-07-09'), 
np.datetime64('2013-07-10'), 
np.datetime64('2013-07-11'), 
np.datetime64('2013-07-12'), 
np.datetime64('2013-07-15'), 
np.datetime64('2013-07-16'), 
np.datetime64('2013-07-17'), 
np.datetime64('2013-07-18'), 
np.datetime64('2013-07-19'), 
np.datetime64('2013-07-22'), 
np.datetime64('2013-07-23'), 
np.datetime64('2013-07-24'), 
np.datetime64('2013-07-25'), 
np.datetime64('2013-07-26'), 
np.datetime64('2013-07-29'), 
np.datetime64('2013-07-30'), 
np.datetime64('2013-07-31'), 
np.datetime64('2013-08-01'), 
np.datetime64('2013-08-02'), 
np.datetime64('2013-08-05'), 
np.datetime64('2013-08-06'), 
np.datetime64('2013-08-07'), 
np.datetime64('2013-08-08'), 
np.datetime64('2013-08-09'), 
np.datetime64('2013-08-12'), 
np.datetime64('2013-08-13'), 
np.datetime64('2013-08-14'), 
np.datetime64('2013-08-15'), 
np.datetime64('2013-08-16'), 
np.datetime64('2013-08-19'), 
np.datetime64('2013-08-20'), 
np.datetime64('2013-08-21'), 
np.datetime64('2013-08-22'), 
np.datetime64('2013-08-23'), 
np.datetime64('2013-08-26'), 
np.datetime64('2013-08-27'), 
np.datetime64('2013-08-28'), 
np.datetime64('2013-08-29'), 
np.datetime64('2013-08-30'), 
np.datetime64('2013-09-02'), 
np.datetime64('2013-09-03'), 
np.datetime64('2013-09-04'), 
np.datetime64('2013-09-05'), 
np.datetime64('2013-09-06'), 
np.datetime64('2013-09-09'), 
np.datetime64('2013-09-10'), 
np.datetime64('2013-09-11'), 
np.datetime64('2013-09-12'), 
np.datetime64('2013-09-13'), 
np.datetime64('2013-09-16'), 
np.datetime64('2013-09-17'), 
np.datetime64('2013-09-18'), 
np.datetime64('2013-09-19'), 
np.datetime64('2013-09-20'), 
np.datetime64('2013-09-23'), 
np.datetime64('2013-09-24'), 
np.datetime64('2013-09-25'), 
np.datetime64('2013-09-26'), 
np.datetime64('2013-09-27'), 
np.datetime64('2013-09-30'), 
np.datetime64('2013-10-01'), 
np.datetime64('2013-10-02'), 
np.datetime64('2013-10-03'), 
np.datetime64('2013-10-04'), 
np.datetime64('2013-10-07'), 
np.datetime64('2013-10-08'), 
np.datetime64('2013-10-09'), 
np.datetime64('2013-10-10'), 
np.datetime64('2013-10-11'), 
np.datetime64('2013-10-14'), 
np.datetime64('2013-10-15'), 
np.datetime64('2013-10-16'), 
np.datetime64('2013-10-17'), 
np.datetime64('2013-10-18'), 
np.datetime64('2013-10-21'), 
np.datetime64('2013-10-22'), 
np.datetime64('2013-10-23'), 
np.datetime64('2013-10-24'), 
np.datetime64('2013-10-25'), 
np.datetime64('2013-10-28'), 
np.datetime64('2013-10-29'), 
np.datetime64('2013-10-30'), 
np.datetime64('2013-10-31'), 
np.datetime64('2013-11-01'), 
np.datetime64('2013-11-04'), 
np.datetime64('2013-11-05'), 
np.datetime64('2013-11-06'), 
np.datetime64('2013-11-07'), 
np.datetime64('2013-11-08'), 
np.datetime64('2013-11-11'), 
np.datetime64('2013-11-12'), 
np.datetime64('2013-11-13'), 
np.datetime64('2013-11-14'), 
np.datetime64('2013-11-15'), 
np.datetime64('2013-11-18'), 
np.datetime64('2013-11-19'), 
np.datetime64('2013-11-20'), 
np.datetime64('2013-11-21'), 
np.datetime64('2013-11-22'), 
np.datetime64('2013-11-25'), 
np.datetime64('2013-11-26'), 
np.datetime64('2013-11-27'), 
np.datetime64('2013-11-28'), 
np.datetime64('2013-11-29'), 
np.datetime64('2013-12-02'), 
np.datetime64('2013-12-03'), 
np.datetime64('2013-12-04'), 
np.datetime64('2013-12-05'), 
np.datetime64('2013-12-06'), 
np.datetime64('2013-12-09'), 
np.datetime64('2013-12-10'), 
np.datetime64('2013-12-11'), 
np.datetime64('2013-12-12'), 
np.datetime64('2013-12-13'), 
np.datetime64('2013-12-16'), 
np.datetime64('2013-12-17'), 
np.datetime64('2013-12-18'), 
np.datetime64('2013-12-19'), 
np.datetime64('2013-12-20'), 
np.datetime64('2013-12-23'), 
np.datetime64('2013-12-24'), 
np.datetime64('2013-12-25'), 
np.datetime64('2013-12-26'), 
np.datetime64('2013-12-27'), 
np.datetime64('2013-12-30'), 
np.datetime64('2013-12-31'), 
np.datetime64('2014-01-01'), 
np.datetime64('2014-01-02'), 
np.datetime64('2014-01-03'), 
np.datetime64('2014-01-06'), 
np.datetime64('2014-01-07'), 
np.datetime64('2014-01-08'), 
np.datetime64('2014-01-09'), 
np.datetime64('2014-01-10'), 
np.datetime64('2014-01-13'), 
np.datetime64('2014-01-14'), 
np.datetime64('2014-01-15'), 
np.datetime64('2014-01-16'), 
np.datetime64('2014-01-17'), 
np.datetime64('2014-01-20'), 
np.datetime64('2014-01-21'), 
np.datetime64('2014-01-22'), 
np.datetime64('2014-01-23'), 
np.datetime64('2014-01-24'), 
np.datetime64('2014-01-27'), 
np.datetime64('2014-01-28'), 
np.datetime64('2014-01-29'), 
np.datetime64('2014-01-30'), 
np.datetime64('2014-01-31'), 
np.datetime64('2014-02-03'), 
np.datetime64('2014-02-04'), 
np.datetime64('2014-02-05'), 
np.datetime64('2014-02-06'), 
np.datetime64('2014-02-07'), 
np.datetime64('2014-02-10'), 
np.datetime64('2014-02-11'), 
np.datetime64('2014-02-12'), 
np.datetime64('2014-02-13'), 
np.datetime64('2014-02-14'), 
np.datetime64('2014-02-17'), 
np.datetime64('2014-02-18'), 
np.datetime64('2014-02-19'), 
np.datetime64('2014-02-20'), 
np.datetime64('2014-02-21'), 
np.datetime64('2014-02-24'), 
np.datetime64('2014-02-25'), 
np.datetime64('2014-02-26'), 
np.datetime64('2014-02-27'), 
np.datetime64('2014-02-28'), 
np.datetime64('2014-03-03'), 
np.datetime64('2014-03-04'), 
np.datetime64('2014-03-05'), 
np.datetime64('2014-03-06'), 
np.datetime64('2014-03-07'), 
np.datetime64('2014-03-10'), 
np.datetime64('2014-03-11'), 
np.datetime64('2014-03-12'), 
np.datetime64('2014-03-13'), 
np.datetime64('2014-03-14'), 
np.datetime64('2014-03-17'), 
np.datetime64('2014-03-18'), 
np.datetime64('2014-03-19'), 
np.datetime64('2014-03-20'), 
np.datetime64('2014-03-21'), 
np.datetime64('2014-03-24'), 
np.datetime64('2014-03-25'), 
np.datetime64('2014-03-26'), 
np.datetime64('2014-03-27'), 
np.datetime64('2014-03-28'), 
np.datetime64('2014-03-31'), 
np.datetime64('2014-04-01'), 
np.datetime64('2014-04-02'), 
np.datetime64('2014-04-03'), 
np.datetime64('2014-04-04'), 
np.datetime64('2014-04-07'), 
np.datetime64('2014-04-08'), 
np.datetime64('2014-04-09'), 
np.datetime64('2014-04-10'), 
np.datetime64('2014-04-11'), 
np.datetime64('2014-04-14'), 
np.datetime64('2014-04-15'), 
np.datetime64('2014-04-16'), 
np.datetime64('2014-04-17'), 
np.datetime64('2014-04-18'), 
np.datetime64('2014-04-21'), 
np.datetime64('2014-04-22'), 
np.datetime64('2014-04-23'), 
np.datetime64('2014-04-24'), 
np.datetime64('2014-04-25'), 
np.datetime64('2014-04-28'), 
np.datetime64('2014-04-29'), 
np.datetime64('2014-04-30'), 
np.datetime64('2014-05-01'), 
np.datetime64('2014-05-02'), 
np.datetime64('2014-05-05'), 
np.datetime64('2014-05-06'), 
np.datetime64('2014-05-07'), 
np.datetime64('2014-05-08'), 
np.datetime64('2014-05-09'), 
np.datetime64('2014-05-12'), 
np.datetime64('2014-05-13'), 
np.datetime64('2014-05-14'), 
np.datetime64('2014-05-15'), 
np.datetime64('2014-05-16'), 
np.datetime64('2014-05-19'), 
np.datetime64('2014-05-20'), 
np.datetime64('2014-05-21'), 
np.datetime64('2014-05-22'), 
np.datetime64('2014-05-23'), 
np.datetime64('2014-05-26'), 
np.datetime64('2014-05-27'), 
np.datetime64('2014-05-28'), 
np.datetime64('2014-05-29'), 
np.datetime64('2014-05-30'), 
np.datetime64('2014-06-02'), 
np.datetime64('2014-06-03'), 
np.datetime64('2014-06-04'), 
np.datetime64('2014-06-05'), 
np.datetime64('2014-06-06'), 
np.datetime64('2014-06-09'), 
np.datetime64('2014-06-10'), 
np.datetime64('2014-06-11'), 
np.datetime64('2014-06-12'), 
np.datetime64('2014-06-13'), 
np.datetime64('2014-06-16'), 
np.datetime64('2014-06-17'), 
np.datetime64('2014-06-18'), 
np.datetime64('2014-06-19'), 
np.datetime64('2014-06-20'), 
np.datetime64('2014-06-23'), 
np.datetime64('2014-06-24'), 
np.datetime64('2014-06-25'), 
np.datetime64('2014-06-26'), 
np.datetime64('2014-06-27'), 
np.datetime64('2014-06-30'), 
np.datetime64('2014-07-01'), 
np.datetime64('2014-07-02'), 
np.datetime64('2014-07-03'), 
np.datetime64('2014-07-04'), 
np.datetime64('2014-07-07'), 
np.datetime64('2014-07-08'), 
np.datetime64('2014-07-09'), 
np.datetime64('2014-07-10'), 
np.datetime64('2014-07-11'), 
np.datetime64('2014-07-14'), 
np.datetime64('2014-07-15'), 
np.datetime64('2014-07-16'), 
np.datetime64('2014-07-17'), 
np.datetime64('2014-07-18'), 
np.datetime64('2014-07-21'), 
np.datetime64('2014-07-22'), 
np.datetime64('2014-07-23'), 
np.datetime64('2014-07-24'), 
np.datetime64('2014-07-25'), 
np.datetime64('2014-07-28'), 
np.datetime64('2014-07-29'), 
np.datetime64('2014-07-30'), 
np.datetime64('2014-07-31'), 
np.datetime64('2014-08-01'), 
np.datetime64('2014-08-04'), 
np.datetime64('2014-08-05'), 
np.datetime64('2014-08-06'), 
np.datetime64('2014-08-07'), 
np.datetime64('2014-08-08'), 
np.datetime64('2014-08-11'), 
np.datetime64('2014-08-12'), 
np.datetime64('2014-08-13'), 
np.datetime64('2014-08-14'), 
np.datetime64('2014-08-15'), 
np.datetime64('2014-08-18'), 
np.datetime64('2014-08-19'), 
np.datetime64('2014-08-20'), 
np.datetime64('2014-08-21'), 
np.datetime64('2014-08-22'), 
np.datetime64('2014-08-25'), 
np.datetime64('2014-08-26'), 
np.datetime64('2014-08-27'), 
np.datetime64('2014-08-28'), 
np.datetime64('2014-08-29'), 
np.datetime64('2014-09-01'), 
np.datetime64('2014-09-02'), 
np.datetime64('2014-09-03'), 
np.datetime64('2014-09-04'), 
np.datetime64('2014-09-05'), 
np.datetime64('2014-09-08'), 
np.datetime64('2014-09-09'), 
np.datetime64('2014-09-10'), 
np.datetime64('2014-09-11'), 
np.datetime64('2014-09-12'), 
np.datetime64('2014-09-15'), 
np.datetime64('2014-09-16'), 
np.datetime64('2014-09-17'), 
np.datetime64('2014-09-18'), 
np.datetime64('2014-09-19'), 
np.datetime64('2014-09-22'), 
np.datetime64('2014-09-23'), 
np.datetime64('2014-09-24'), 
np.datetime64('2014-09-25'), 
np.datetime64('2014-09-26'), 
np.datetime64('2014-09-29'), 
np.datetime64('2014-09-30'), 
np.datetime64('2014-10-01'), 
np.datetime64('2014-10-02'), 
np.datetime64('2014-10-03'), 
np.datetime64('2014-10-06'), 
np.datetime64('2014-10-07'), 
np.datetime64('2014-10-08'), 
np.datetime64('2014-10-09'), 
np.datetime64('2014-10-10'), 
np.datetime64('2014-10-13'), 
np.datetime64('2014-10-14'), 
np.datetime64('2014-10-15'), 
np.datetime64('2014-10-16'), 
np.datetime64('2014-10-17'), 
np.datetime64('2014-10-20'), 
np.datetime64('2014-10-21'), 
np.datetime64('2014-10-22'), 
np.datetime64('2014-10-23'), 
np.datetime64('2014-10-24'), 
np.datetime64('2014-10-27'), 
np.datetime64('2014-10-28'), 
np.datetime64('2014-10-29'), 
np.datetime64('2014-10-30'), 
np.datetime64('2014-10-31'), 
np.datetime64('2014-11-03'), 
np.datetime64('2014-11-04'), 
np.datetime64('2014-11-05'), 
np.datetime64('2014-11-06'), 
np.datetime64('2014-11-07'), 
np.datetime64('2014-11-10'), 
np.datetime64('2014-11-11'), 
np.datetime64('2014-11-12'), 
np.datetime64('2014-11-13'), 
np.datetime64('2014-11-14'), 
np.datetime64('2014-11-17'), 
np.datetime64('2014-11-18'), 
np.datetime64('2014-11-19'), 
np.datetime64('2014-11-20'), 
np.datetime64('2014-11-21'), 
np.datetime64('2014-11-24'), 
np.datetime64('2014-11-25'), 
np.datetime64('2014-11-26'), 
np.datetime64('2014-11-27'), 
np.datetime64('2014-11-28'), 
np.datetime64('2014-12-01'), 
np.datetime64('2014-12-02'), 
np.datetime64('2014-12-03'), 
np.datetime64('2014-12-04'), 
np.datetime64('2014-12-05'), 
np.datetime64('2014-12-08'), 
np.datetime64('2014-12-09'), 
np.datetime64('2014-12-10'), 
np.datetime64('2014-12-11'), 
np.datetime64('2014-12-12'), 
np.datetime64('2014-12-15'), 
np.datetime64('2014-12-16'), 
np.datetime64('2014-12-17'), 
np.datetime64('2014-12-18'), 
np.datetime64('2014-12-19'), 
np.datetime64('2014-12-22'), 
np.datetime64('2014-12-23'), 
np.datetime64('2014-12-24'), 
np.datetime64('2014-12-25'), 
np.datetime64('2014-12-26'), 
np.datetime64('2014-12-29'), 
np.datetime64('2014-12-30'), 
np.datetime64('2014-12-31'), 
np.datetime64('2015-01-01'), 
np.datetime64('2015-01-02'), 
np.datetime64('2015-01-05'), 
np.datetime64('2015-01-06'), 
np.datetime64('2015-01-07'), 
np.datetime64('2015-01-08'), 
np.datetime64('2015-01-09'), 
np.datetime64('2015-01-12'), 
np.datetime64('2015-01-13'), 
np.datetime64('2015-01-14'), 
np.datetime64('2015-01-15'), 
np.datetime64('2015-01-16'), 
np.datetime64('2015-01-19'), 
np.datetime64('2015-01-20'), 
np.datetime64('2015-01-21'), 
np.datetime64('2015-01-22'), 
np.datetime64('2015-01-23'), 
np.datetime64('2015-01-26'), 
np.datetime64('2015-01-27'), 
np.datetime64('2015-01-28'), 
np.datetime64('2015-01-29'), 
np.datetime64('2015-01-30'), 
np.datetime64('2015-02-02'), 
np.datetime64('2015-02-03'), 
np.datetime64('2015-02-04'), 
np.datetime64('2015-02-05'), 
np.datetime64('2015-02-06'), 
np.datetime64('2015-02-09'), 
np.datetime64('2015-02-10'), 
np.datetime64('2015-02-11'), 
np.datetime64('2015-02-12'), 
np.datetime64('2015-02-13'), 
np.datetime64('2015-02-16'), 
np.datetime64('2015-02-17'), 
np.datetime64('2015-02-18'), 
np.datetime64('2015-02-19'), 
np.datetime64('2015-02-20'), 
np.datetime64('2015-02-23'), 
np.datetime64('2015-02-24'), 
np.datetime64('2015-02-25'), 
np.datetime64('2015-02-26'), 
np.datetime64('2015-02-27'), 
np.datetime64('2015-03-02'), 
np.datetime64('2015-03-03'), 
np.datetime64('2015-03-04'), 
np.datetime64('2015-03-05'), 
np.datetime64('2015-03-06'), 
np.datetime64('2015-03-09'), 
np.datetime64('2015-03-10'), 
np.datetime64('2015-03-11'), 
np.datetime64('2015-03-12'), 
np.datetime64('2015-03-13'), 
np.datetime64('2015-03-16'), 
np.datetime64('2015-03-17'), 
np.datetime64('2015-03-18'), 
np.datetime64('2015-03-19'), 
np.datetime64('2015-03-20'), 
np.datetime64('2015-03-23'), 
np.datetime64('2015-03-24'), 
np.datetime64('2015-03-25'), 
np.datetime64('2015-03-26'), 
np.datetime64('2015-03-27'), 
np.datetime64('2015-03-30'), 
np.datetime64('2015-03-31'), 
np.datetime64('2015-04-01'), 
np.datetime64('2015-04-02'), 
np.datetime64('2015-04-03'), 
np.datetime64('2015-04-06'), 
np.datetime64('2015-04-07'), 
np.datetime64('2015-04-08'), 
np.datetime64('2015-04-09'), 
np.datetime64('2015-04-10'), 
np.datetime64('2015-04-13'), 
np.datetime64('2015-04-14'), 
np.datetime64('2015-04-15'), 
np.datetime64('2015-04-16'), 
np.datetime64('2015-04-17'), 
np.datetime64('2015-04-20'), 
np.datetime64('2015-04-21'), 
np.datetime64('2015-04-22'), 
np.datetime64('2015-04-23'), 
np.datetime64('2015-04-24'), 
np.datetime64('2015-04-27'), 
np.datetime64('2015-04-28'), 
np.datetime64('2015-04-29'), 
np.datetime64('2015-04-30'), 
np.datetime64('2015-05-01'), 
np.datetime64('2015-05-04'), 
np.datetime64('2015-05-05'), 
np.datetime64('2015-05-06'), 
np.datetime64('2015-05-07'), 
np.datetime64('2015-05-08'), 
np.datetime64('2015-05-11'), 
np.datetime64('2015-05-12'), 
np.datetime64('2015-05-13'), 
np.datetime64('2015-05-14'), 
np.datetime64('2015-05-15'), 
np.datetime64('2015-05-18'), 
np.datetime64('2015-05-19'), 
np.datetime64('2015-05-20'), 
np.datetime64('2015-05-21'), 
np.datetime64('2015-05-22'), 
np.datetime64('2015-05-25'), 
np.datetime64('2015-05-26'), 
np.datetime64('2015-05-27'), 
np.datetime64('2015-05-28'), 
np.datetime64('2015-05-29'), 
np.datetime64('2015-06-01'), 
np.datetime64('2015-06-02'), 
np.datetime64('2015-06-03'), 
np.datetime64('2015-06-04'), 
np.datetime64('2015-06-05'), 
np.datetime64('2015-06-08'), 
np.datetime64('2015-06-09'), 
np.datetime64('2015-06-10'), 
np.datetime64('2015-06-11'), 
np.datetime64('2015-06-12'), 
np.datetime64('2015-06-15'), 
np.datetime64('2015-06-16'), 
np.datetime64('2015-06-17'), 
np.datetime64('2015-06-18'), 
np.datetime64('2015-06-19'), 
np.datetime64('2015-06-22'), 
np.datetime64('2015-06-23'), 
np.datetime64('2015-06-24'), 
np.datetime64('2015-06-25'), 
np.datetime64('2015-06-26'), 
np.datetime64('2015-06-29'), 
np.datetime64('2015-06-30'), 
np.datetime64('2015-07-01'), 
np.datetime64('2015-07-02'), 
np.datetime64('2015-07-03'), 
np.datetime64('2015-07-06'), 
np.datetime64('2015-07-07'), 
np.datetime64('2015-07-08'), 
np.datetime64('2015-07-09'), 
np.datetime64('2015-07-10'), 
np.datetime64('2015-07-13'), 
np.datetime64('2015-07-14'), 
np.datetime64('2015-07-15'), 
np.datetime64('2015-07-16'), 
np.datetime64('2015-07-17'), 
np.datetime64('2015-07-20'), 
np.datetime64('2015-07-21'), 
np.datetime64('2015-07-22'), 
np.datetime64('2015-07-23'), 
np.datetime64('2015-07-24'), 
np.datetime64('2015-07-27'), 
np.datetime64('2015-07-28'), 
np.datetime64('2015-07-29'), 
np.datetime64('2015-07-30'), 
np.datetime64('2015-07-31'), 
np.datetime64('2015-08-03'), 
np.datetime64('2015-08-04'), 
np.datetime64('2015-08-05'), 
np.datetime64('2015-08-06'), 
np.datetime64('2015-08-07'), 
np.datetime64('2015-08-10'), 
np.datetime64('2015-08-11'), 
np.datetime64('2015-08-12'), 
np.datetime64('2015-08-13'), 
np.datetime64('2015-08-14'), 
np.datetime64('2015-08-17'), 
np.datetime64('2015-08-18'), 
np.datetime64('2015-08-19'), 
np.datetime64('2015-08-20'), 
np.datetime64('2015-08-21'), 
np.datetime64('2015-08-24'), 
np.datetime64('2015-08-25'), 
np.datetime64('2015-08-26'), 
np.datetime64('2015-08-27'), 
np.datetime64('2015-08-28'), 
np.datetime64('2015-08-31'), 
np.datetime64('2015-09-01'), 
np.datetime64('2015-09-02'), 
np.datetime64('2015-09-03'), 
np.datetime64('2015-09-04'), 
np.datetime64('2015-09-08'), 
np.datetime64('2015-09-09'), 
np.datetime64('2015-09-10'), 
np.datetime64('2015-09-11'), 
np.datetime64('2015-09-14'), 
np.datetime64('2015-09-15'), 
np.datetime64('2015-09-16'), 
np.datetime64('2015-09-17'), 
np.datetime64('2015-09-18'), 
np.datetime64('2015-09-21'), 
np.datetime64('2015-09-22'), 
np.datetime64('2015-09-23'), 
np.datetime64('2015-09-24'), 
np.datetime64('2015-09-25'), 
np.datetime64('2015-09-28'), 
np.datetime64('2015-09-29'), 
np.datetime64('2015-09-30'), 
np.datetime64('2015-10-01'), 
np.datetime64('2015-10-02'), 
np.datetime64('2015-10-05'), 
np.datetime64('2015-10-06'), 
np.datetime64('2015-10-07'), 
np.datetime64('2015-10-08'), 
np.datetime64('2015-10-09'), 
np.datetime64('2015-10-12'), 
np.datetime64('2015-10-13'), 
np.datetime64('2015-10-14'), 
np.datetime64('2015-10-15'), 
np.datetime64('2015-10-16'), 
np.datetime64('2015-10-19'), 
np.datetime64('2015-10-20'), 
np.datetime64('2015-10-21'), 
np.datetime64('2015-10-22'), 
np.datetime64('2015-10-23'), 
np.datetime64('2015-10-26'), 
np.datetime64('2015-10-27'), 
np.datetime64('2015-10-28'), 
np.datetime64('2015-10-29'), 
np.datetime64('2015-10-30'), 
np.datetime64('2015-11-02'), 
np.datetime64('2015-11-03'), 
np.datetime64('2015-11-04'), 
np.datetime64('2015-11-05')])
    data = np.array([
        [ 0.033881,  0.070626], 
[ 0.059982,  0.063480], 
[ 0.053421,  0.058110], 
[ 0.060761,  0.055527], 
[ 0.030524,  0.056989], 
[ 0.059318,  0.059612], 
[ 0.042963,  0.059928], 
[ 0.057430,  0.057992], 
[ 0.071775,  0.059604], 
[ 0.059514,  0.061361], 
[ 0.056612,  0.060477], 
[ 0.049194,  0.062337], 
[ 0.046620,  0.059973], 
[ 0.059820,  0.060410], 
[ 0.060888,  0.058692], 
[ 0.064032,  0.059744], 
[ 0.070972,  0.061337], 
[ 0.064843,  0.061783], 
[ 0.060160,  0.060351], 
[ 0.069460,  0.058504], 
[ 0.070111,  0.061302], 
[ 0.060322,  0.062313], 
[ 0.072540,  0.062472], 
[ 0.053875,  0.062553], 
[ 0.064863,  0.063380], 
[ 0.062930,  0.062496], 
[ 0.035961,  0.063761], 
[ 0.058236,  0.061708], 
[ 0.061174,  0.061652], 
[ 0.043819,  0.062620], 
[ 0.028896,  0.061692], 
[ 0.052799,  0.059331], 
[ 0.064702,  0.059205], 
[ 0.071229,  0.059679], 
[ 0.045752,  0.059585], 
[ 0.065244,  0.059831], 
[ 0.070976,  0.059676], 
[ 0.075124,  0.064674], 
[ 0.057168,  0.064018], 
[ 0.057447,  0.063855], 
[ 0.080541,  0.071475], 
[ 0.071874,  0.073282], 
[ 0.069681,  0.070694], 
[ 0.065002,  0.071890], 
[ 0.032372,  0.072710], 
[ 0.055775,  0.068542], 
[ 0.060989,  0.068503], 
[ 0.057200,  0.065275], 
[ 0.075684,  0.065139], 
[ 0.068596,  0.066101], 
[ 0.027172,  0.069405], 
[ 0.078497,  0.069147], 
[ 0.076688,  0.067152], 
[ 0.060102,  0.067135], 
[ 0.079845,  0.071731], 
[ 0.082018,  0.073417], 
[ 0.068036,  0.074308], 
[ 0.075552,  0.071830], 
[ 0.070522,  0.071826], 
[ 0.064330,  0.070199], 
[ 0.084695,  0.072783], 
[ 0.068823,  0.074754], 
[ 0.079830,  0.072669], 
[ 0.069010,  0.072013], 
[ 0.071632,  0.071893], 
[ 0.078665,  0.072880], 
[ 0.068072,  0.070869], 
[ 0.062263,  0.072535], 
[ 0.069437,  0.072401], 
[ 0.067948,  0.072176], 
[ 0.069279,  0.070915], 
[ 0.053882,  0.068488], 
[ 0.061287,  0.068794], 
[ 0.024257,  0.072530], 
[ 0.075053,  0.071437], 
[ 0.061281,  0.069356], 
[ 0.039044,  0.070563], 
[ 0.029250,  0.069075], 
[ 0.068947,  0.071921], 
[ 0.078074,  0.072080], 
[ 0.064619,  0.073596], 
[ 0.072166,  0.070822], 
[ 0.080048,  0.069554], 
[ 0.080622,  0.069711], 
[ 0.073655,  0.070139], 
[ 0.080879,  0.071361], 
[ 0.059465,  0.068962], 
[ 0.068695,  0.068966], 
[ 0.079238,  0.068843], 
[ 0.076702,  0.066148], 
[ 0.074697,  0.063093], 
[ 0.070528,  0.064438], 
[ 0.063484,  0.065455], 
[ 0.041327,  0.062034], 
[ 0.075108,  0.060556], 
[ 0.061454,  0.060551], 
[ 0.062535,  0.060040], 
[ 0.031758,  0.059459], 
[ 0.076307,  0.062190], 
[ 0.073517,  0.058361], 
[ 0.032105,  0.058786], 
[ 0.064289,  0.061036], 
[ 0.068058,  0.060180], 
[ 0.070143,  0.060056], 
[ 0.062983,  0.059978], 
[ 0.064157,  0.058985], 
[ 0.047661,  0.054414], 
[ 0.071882,  0.056525], 
[ 0.060259,  0.058179], 
[ 0.052805,  0.056325], 
[ 0.057647,  0.055741], 
[ 0.072636,  0.056901], 
[ 0.051946,  0.057892], 
[ 0.066165,  0.056556], 
[ 0.064404,  0.051843], 
[ 0.047452,  0.044102], 
[ 0.069453,  0.045863], 
[ 0.063736,  0.049590], 
[ 0.061985,  0.052631], 
[ 0.063665,  0.053675], 
[ 0.040162,  0.050376], 
[ 0.054006,  0.050716], 
[ 0.044109,  0.041303], 
[ 0.041263,  0.044485], 
[ 0.044477,  0.041626], 
[ 0.043388,  0.043739], 
[ 0.042783,  0.046428], 
[ 0.039516,  0.047580], 
[ 0.044773,  0.046793], 
[ 0.040350,  0.046309], 
[ 0.066766,  0.049255], 
[ 0.026694,  0.051145], 
[ 0.043680,  0.054917], 
[ 0.043027,  0.049036], 
[ 0.047650,  0.048288], 
[ 0.057214,  0.051497], 
[ 0.020285,  0.052886], 
[ 0.047157,  0.051625], 
[ 0.043897,  0.052084], 
[ 0.055237,  0.053728], 
[ 0.073407,  0.055666], 
[ 0.048532,  0.055277], 
[ 0.064364,  0.058194], 
[ 0.043711,  0.057157], 
[ 0.051905,  0.056114], 
[ 0.047917,  0.054537], 
[ 0.051062,  0.051900], 
[ 0.052791,  0.051713], 
[ 0.070341,  0.053863], 
[ 0.062212,  0.055423], 
[ 0.045311,  0.055110], 
[ 0.047163,  0.054836], 
[ 0.046506,  0.055495], 
[ 0.073301,  0.054899], 
[ 0.045905,  0.046287], 
[ 0.051858,  0.046182], 
[ 0.041753,  0.045568], 
[ 0.045627,  0.045745], 
[ 0.053366,  0.044972], 
[ 0.020828,  0.045169], 
[ 0.035310,  0.044799], 
[ 0.038622,  0.042120], 
[ 0.035558,  0.039434], 
[ 0.036480,  0.040427], 
[ 0.037791,  0.040704], 
[ 0.023191,  0.041045], 
[ 0.036098,  0.041864], 
[ 0.033425,  0.040697], 
[ 0.037527,  0.042119], 
[ 0.043596,  0.042600], 
[ 0.026248,  0.047254], 
[ 0.040927,  0.047891], 
[ 0.040506,  0.049216], 
[ 0.055020,  0.050676], 
[ 0.031346,  0.046970], 
[ 0.040216,  0.046398], 
[ 0.061093,  0.045643], 
[ 0.039273,  0.043593], 
[ 0.019562,  0.043038], 
[ 0.025961,  0.043682], 
[ 0.022710,  0.043361], 
[ 0.034238,  0.043357], 
[ 0.030461,  0.041878], 
[ 0.069353,  0.042378], 
[ 0.022170,  0.044230], 
[ 0.033289,  0.041817], 
[ 0.029515,  0.041806], 
[ 0.066717,  0.043512], 
[ 0.031346,  0.040146], 
[ 0.015680,  0.040222], 
[ 0.064488,  0.043696], 
[ 0.048558,  0.045176], 
[ 0.065261,  0.046130], 
[ 0.044369,  0.045977], 
[ 0.039596,  0.046675], 
[ 0.043341,  0.045515], 
[ 0.066400,  0.046475], 
[ 0.065559,  0.044725], 
[ 0.036035,  0.043353], 
[ 0.033463,  0.045561], 
[ 0.036138,  0.045161], 
[ 0.069567,  0.047719], 
[ 0.033221,  0.046554], 
[ 0.042618,  0.047357], 
[ 0.036977,  0.047917], 
[ 0.033596,  0.046176], 
[ 0.038056,  0.044288], 
[ 0.023520,  0.046604], 
[ 0.068310,  0.048427], 
[ 0.065366,  0.047559], 
[ 0.044031,  0.048590], 
[ 0.039824,  0.049449], 
[ 0.040151,  0.048312], 
[ 0.067541,  0.048270], 
[ 0.066765,  0.049035], 
[ 0.068124,  0.049059], 
[ 0.019003,  0.050505], 
[ 0.049679,  0.050764], 
[ 0.052538,  0.049582], 
[ 0.048874,  0.049211], 
[ 0.062375,  0.046542], 
[ 0.024516,  0.046766], 
[ 0.040577,  0.047923], 
[ 0.030850,  0.044932], 
[ 0.021195,  0.045035], 
[ 0.039205,  0.046143], 
[ 0.043971,  0.045262], 
[ 0.047773,  0.045821], 
[ 0.053103,  0.046104], 
[ 0.054994,  0.046942], 
[ 0.040511,  0.047174], 
[ 0.038350,  0.046859], 
[ 0.035814,  0.045183], 
[ 0.030741,  0.046043], 
[ 0.050717,  0.046932], 
[ 0.032903,  0.047706], 
[ 0.038116,  0.047693], 
[ 0.018230,  0.047238], 
[ 0.033082,  0.046749], 
[ 0.045468,  0.045621], 
[ 0.050457,  0.046105], 
[ 0.022866,  0.044724], 
[ 0.032361,  0.044073], 
[ 0.031428,  0.042624], 
[ 0.048529,  0.042957], 
[ 0.034873,  0.043803], 
[ 0.043806,  0.043888], 
[ 0.048844,  0.042299], 
[ 0.055448,  0.043042], 
[ 0.029379,  0.043147], 
[ 0.031431,  0.043426], 
[ 0.036122,  0.042933], 
[ 0.046076,  0.041029], 
[ 0.038924,  0.041248], 
[ 0.048863,  0.041615], 
[ 0.053760,  0.039212], 
[ 0.035877,  0.039132], 
[ 0.064803,  0.039145], 
[ 0.047674,  0.038019], 
[ 0.025812,  0.038505], 
[ 0.029895,  0.038283], 
[ 0.025231,  0.038236], 
[ 0.027597,  0.037264], 
[ 0.022087,  0.037782], 
[ 0.067214,  0.040050], 
[ 0.027907,  0.039839], 
[ 0.048594,  0.038124], 
[ 0.022109,  0.036183], 
[ 0.032150,  0.036436], 
[ 0.026736,  0.037694], 
[ 0.054617,  0.038041], 
[ 0.033165,  0.037278], 
[ 0.041730,  0.037986], 
[ 0.036686,  0.038354], 
[ 0.027829,  0.038476], 
[ 0.020632,  0.037401], 
[ 0.043433,  0.037575], 
[ 0.058744,  0.037993], 
[ 0.029914,  0.037884], 
[ 0.035066,  0.037580], 
[ 0.031029,  0.037337], 
[ 0.038972,  0.038084], 
[ 0.046248,  0.037962], 
[ 0.062585,  0.039849], 
[ 0.039809,  0.037444], 
[ 0.044388,  0.039196], 
[ 0.046187,  0.040567], 
[ 0.036795,  0.037265], 
[ 0.049331,  0.038764], 
[ 0.031333,  0.039398], 
[ 0.031164,  0.039612], 
[ 0.053416,  0.038364], 
[ 0.037794,  0.038843], 
[ 0.026237,  0.037109], 
[ 0.032039,  0.037197], 
[ 0.023979,  0.036609], 
[ 0.030680,  0.037123], 
[ 0.032673,  0.035190], 
[ 0.061795,  0.035003], 
[ 0.038893,  0.035944], 
[ 0.027939,  0.035704], 
[ 0.025692,  0.035478], 
[ 0.022052,  0.037842], 
[ 0.035596,  0.036512], 
[ 0.045697,  0.037584], 
[ 0.042479,  0.037247], 
[ 0.033472,  0.036394], 
[ 0.025842,  0.034089], 
[ 0.024755,  0.032805], 
[ 0.024950,  0.032517], 
[ 0.045207,  0.032419], 
[ 0.029983,  0.033450], 
[ 0.039297,  0.032542], 
[ 0.029141,  0.035075], 
[ 0.022417,  0.034825], 
[ 0.043524,  0.034388], 
[ 0.027726,  0.034178], 
[ 0.027632,  0.034012], 
[ 0.062840,  0.033917], 
[ 0.024288,  0.034160], 
[ 0.034677,  0.034435], 
[ 0.023134,  0.035221], 
[ 0.038841,  0.035165], 
[ 0.028452,  0.033832], 
[ 0.057058,  0.033407], 
[ 0.029806,  0.033601], 
[ 0.041107,  0.032836], 
[ 0.029172,  0.032916], 
[ 0.027716,  0.033592], 
[ 0.037152,  0.034752], 
[ 0.028548,  0.033474], 
[ 0.023771,  0.033241], 
[ 0.062162,  0.034459], 
[ 0.045212,  0.035540], 
[ 0.048885,  0.035378], 
[ 0.028120,  0.034701], 
[ 0.045294,  0.034995], 
[ 0.052390,  0.033945], 
[ 0.061817,  0.033010], 
[ 0.025816,  0.033053], 
[ 0.046601,  0.032163], 
[ 0.029179,  0.033350], 
[ 0.028417,  0.033615], 
[ 0.017897,  0.034047], 
[ 0.027783,  0.033575], 
[ 0.062143,  0.032006], 
[ 0.037082,  0.032870], 
[ 0.033806,  0.032931], 
[ 0.046198,  0.032298], 
[ 0.020116,  0.033610], 
[ 0.024546,  0.033199], 
[ 0.030633,  0.032846], 
[ 0.042847,  0.032062], 
[ 0.025141,  0.030034], 
[ 0.039765,  0.029052], 
[ 0.059633,  0.029585], 
[ 0.028768,  0.029902], 
[ 0.035012,  0.031490], 
[ 0.041967,  0.030407], 
[ 0.032884,  0.030531], 
[ 0.030728,  0.030200], 
[ 0.025603,  0.029960], 
[ 0.049092,  0.029651], 
[ 0.024743,  0.030344], 
[ 0.025961,  0.031610], 
[ 0.047983,  0.030863], 
[ 0.037856,  0.031714], 
[ 0.042358,  0.033047], 
[ 0.029166,  0.032440], 
[ 0.034406,  0.032002], 
[ 0.042582,  0.030613], 
[ 0.036358,  0.029987], 
[ 0.026822,  0.028352], 
[ 0.043901,  0.028781], 
[ 0.056466,  0.028344], 
[ 0.027508,  0.027617], 
[ 0.029105,  0.027750], 
[ 0.024427,  0.027509], 
[ 0.058314,  0.027361], 
[ 0.032573,  0.026337], 
[ 0.047205,  0.024709], 
[ 0.039252,  0.025282], 
[ 0.026423,  0.026362], 
[ 0.024329,  0.023933], 
[ 0.017703,  0.025771], 
[ 0.027195,  0.025298], 
[ 0.018017,  0.026467], 
[ 0.041993,  0.026987], 
[ 0.035272,  0.026524], 
[ 0.021359,  0.026216], 
[ 0.035558,  0.025138], 
[ 0.042224,  0.023881], 
[ 0.055443,  0.022833], 
[ 0.049044,  0.022927], 
[ 0.024084,  0.023482], 
[ 0.042082,  0.025604], 
[ 0.032204,  0.025230], 
[ 0.025598,  0.026048], 
[ 0.045055,  0.026332], 
[ 0.046782,  0.026475], 
[ 0.038943,  0.026413], 
[ 0.028260,  0.026203], 
[ 0.053926,  0.026872], 
[ 0.037245,  0.027931], 
[ 0.054713,  0.027597], 
[ 0.037730,  0.026945], 
[ 0.030226,  0.026987], 
[ 0.041522,  0.026669], 
[ 0.048612,  0.026754], 
[ 0.035331,  0.026867], 
[ 0.051744,  0.026887], 
[ 0.039794,  0.026654], 
[ 0.050795,  0.026370], 
[ 0.032988,  0.026440], 
[ 0.045106,  0.026569], 
[ 0.029408,  0.026446], 
[ 0.058812,  0.026432], 
[ 0.041850,  0.026327], 
[ 0.048595,  0.026316], 
[ 0.027747,  0.026317], 
[ 0.040846,  0.027045], 
[ 0.050750,  0.026922], 
[ 0.029503,  0.027204], 
[ 0.064770,  0.026701], 
[ 0.040360,  0.025153], 
[ 0.036075,  0.026689], 
[ 0.033573,  0.026271], 
[ 0.035677,  0.026279], 
[ 0.050943,  0.026305], 
[ 0.048308,  0.026243], 
[ 0.025071,  0.028199], 
[ 0.036016,  0.029695], 
[ 0.055190,  0.029828], 
[ 0.050673,  0.028372], 
[ 0.022495,  0.028432], 
[ 0.067950,  0.029203], 
[ 0.031192,  0.028808], 
[ 0.039888,  0.029603], 
[ 0.045773,  0.030080], 
[ 0.042532,  0.032593], 
[ 0.054600,  0.032748], 
[ 0.065638,  0.032716], 
[ 0.066526,  0.031868], 
[ 0.036316,  0.030076], 
[ 0.047966,  0.029427], 
[ 0.026135,  0.029775], 
[ 0.039247,  0.029655], 
[ 0.029953,  0.027532], 
[ 0.032514,  0.025854], 
[ 0.038093,  0.025727], 
[ 0.043355,  0.026351], 
[ 0.027994,  0.026020], 
[ 0.057230,  0.026491], 
[ 0.041138,  0.027293], 
[ 0.038790,  0.027959], 
[ 0.044137,  0.028601], 
[ 0.025119,  0.029642], 
[ 0.035496,  0.030861], 
[ 0.037841,  0.030288], 
[ 0.041895,  0.031074], 
[ 0.041030,  0.032777], 
[ 0.072656,  0.034130], 
[ 0.072221,  0.035244], 
[ 0.030752,  0.034881], 
[ 0.063751,  0.036495], 
[ 0.030623,  0.039127], 
[ 0.039426,  0.044903], 
[ 0.047083,  0.043197], 
[ 0.032230,  0.038792], 
[ 0.038574,  0.039354], 
[ 0.050826,  0.037987], 
[ 0.051183,  0.035861], 
[ 0.039362,  0.035149], 
[ 0.035603,  0.035034], 
[ 0.032643,  0.035472], 
[ 0.036651,  0.035721], 
[ 0.062318,  0.034816], 
[ 0.047508,  0.036066], 
[ 0.066543,  0.035354], 
[ 0.065968,  0.034882], 
[ 0.026815,  0.034620], 
[ 0.031460,  0.034013], 
[ 0.037521,  0.034429], 
[ 0.034735,  0.035321], 
[ 0.028872,  0.036602], 
[ 0.046085,  0.035529], 
[ 0.038583,  0.036266], 
[ 0.036499,  0.036260], 
[ 0.051453,  0.037109], 
[ 0.051170,  0.039682], 
[ 0.036595,  0.038977], 
[ 0.034729,  0.038406], 
[ 0.032218,  0.041487], 
[ 0.041675,  0.043867], 
[ 0.057538,  0.041499], 
[ 0.072291,  0.043365], 
[ 0.076317,  0.043306], 
[ 0.057997,  0.044588], 
[ 0.047980,  0.043747], 
[ 0.089917,  0.047574], 
[ 0.071574,  0.043100], 
[ 0.050136,  0.040306], 
[ 0.079661,  0.040291], 
[ 0.045516,  0.038901], 
[ 0.063909,  0.039870], 
[ 0.062894,  0.042867], 
[ 0.038957,  0.041544], 
[ 0.055812,  0.042758], 
[ 0.069437,  0.045347], 
[ 0.034072,  0.045082], 
[ 0.091294,  0.048769], 
[ 0.056806,  0.049438], 
[ 0.043480,  0.043834], 
[ 0.080545,  0.043267], 
[ 0.049662,  0.046495], 
[ 0.048872,  0.046690], 
[ 0.027523,  0.044998], 
[ 0.050757,  0.044989], 
[ 0.042035,  0.045010], 
[ 0.049502,  0.047123], 
[ 0.048496,  0.048783], 
[ 0.040019,  0.049385], 
[ 0.048233,  0.049277], 
[ 0.098218,  0.049783], 
[ 0.059525,  0.052404], 
[ 0.038588,  0.058142], 
[ 0.057846,  0.055177], 
[ 0.048749,  0.054787], 
[ 0.087753,  0.053787], 
[ 0.070747,  0.057848], 
[ 0.092253,  0.055610], 
[ 0.079415,  0.056738], 
[ 0.069057,  0.055591], 
[ 0.094756,  0.055995], 
[ 0.061460,  0.052453], 
[ 0.064622,  0.048015], 
[ 0.049008,  0.053791], 
[ 0.093492,  0.049078], 
[ 0.126497,  0.050412], 
[ 0.089181,  0.048177], 
[ 0.038748,  0.050265], 
[ 0.064228,  0.050535], 
[ 0.049305,  0.055099], 
[ 0.089224,  0.058307], 
[ 0.093932,  0.054416], 
[ 0.087025,  0.051842], 
[ 0.072339,  0.050232], 
[ 0.108889,  0.048047], 
[ 0.042609,  0.045245], 
[ 0.048239,  0.045670], 
[ 0.068185,  0.044335], 
[ 0.049024,  0.045210], 
[ 0.048668,  0.047502], 
[ 0.066852,  0.046916], 
[ 0.050406,  0.046691], 
[ 0.089044,  0.047130], 
[ 0.077685,  0.042077], 
[ 0.052630,  0.043944], 
[ 0.042240,  0.046923], 
[ 0.052401,  0.043122], 
[ 0.074384,  0.041062], 
[ 0.042584,  0.044090], 
[ 0.044466,  0.042728], 
[ 0.049175,  0.038796], 
[ 0.032311,  0.038611], 
[ 0.048828,  0.038090], 
[ 0.078420,  0.037288], 
[ 0.060742,  0.037433], 
[ 0.044053,  0.035219], 
[ 0.034571,  0.035918], 
[ 0.100248,  0.040020], 
[ 0.063008,  0.039575], 
[ 0.054266,  0.041662], 
[ 0.072238,  0.043420], 
[ 0.036618,  0.044901], 
[ 0.058730,  0.042924], 
[ 0.045189,  0.048911], 
[ 0.096359,  0.051571], 
[ 0.081023,  0.049185], 
[ 0.054982,  0.048732], 
[ 0.087205,  0.049024], 
[ 0.057672,  0.049496], 
[ 0.039283,  0.043451], 
[ 0.063757,  0.045391], 
[ 0.080634,  0.044627], 
[ 0.090146,  0.046056], 
[ 0.085136,  0.046302], 
[ 0.123652,  0.044928], 
[ 0.110214,  0.045419], 
[ 0.070680,  0.045460], 
[ 0.060468,  0.046601], 
[ 0.067495,  0.046772], 
[ 0.085235,  0.047732], 
[ 0.041020,  0.047457], 
[ 0.071760,  0.045533], 
[ 0.054120,  0.049034], 
[ 0.068283,  0.047436], 
[ 0.067431,  0.046035], 
[ 0.060038,  0.045997], 
[ 0.077625,  0.046974], 
[ 0.052073,  0.046483], 
[ 0.119472,  0.043824], 
[ 0.052427,  0.044122], 
[ 0.105686,  0.045723], 
[ 0.083523,  0.044903], 
[ 0.074645,  0.043867], 
[ 0.061787,  0.040222], 
[ 0.108794,  0.039476], 
[ 0.064256,  0.039474], 
[ 0.059906,  0.039044], 
[ 0.042121,  0.036024], 
[ 0.108122,  0.034518], 
[ 0.037706,  0.035065], 
[ 0.065863,  0.033569], 
[ 0.032050,  0.031612], 
[ 0.064036,  0.031739], 
[ 0.046338,  0.031610], 
[ 0.103216,  0.032712], 
[ 0.034306,  0.033699], 
[ 0.038911,  0.033488], 
[ 0.061664,  0.032377], 
[ 0.037669,  0.033065], 
[ 0.048980,  0.032794], 
[ 0.048812,  0.034814], 
[ 0.074610,  0.034648], 
[ 0.068837,  0.035360], 
[ 0.041512,  0.034620], 
[ 0.111985,  0.036954], 
[ 0.069217,  0.038170], 
[ 0.030842,  0.036947], 
[ 0.046301,  0.033613], 
[ 0.100121,  0.031904], 
[ 0.047760,  0.033554], 
[ 0.032370,  0.030090], 
[ 0.059140,  0.031573], 
[ 0.035857,  0.031034], 
[ 0.033076,  0.031005], 
[ 0.050102,  0.032069], 
[ 0.042536,  0.034152], 
[ 0.032585,  0.033991], 
[ 0.052540,  0.033064], 
[ 0.097388,  0.031931], 
[ 0.035930,  0.031972], 
[ 0.046021,  0.032117], 
[ 0.051209,  0.030525], 
[ 0.030832,  0.028656], 
[ 0.046071,  0.028756], 
[ 0.029760,  0.027496], 
[ 0.029159,  0.026345], 
[ 0.040662,  0.028095], 
[ 0.031089,  0.029447], 
[ 0.092839,  0.027719], 
[ 0.029653,  0.029656], 
[ 0.022909,  0.031492], 
[ 0.034083,  0.032581], 
[ 0.059730,  0.033110], 
[ 0.058809,  0.035103], 
[ 0.048242,  0.033362], 
[ 0.027206,  0.030156], 
[ 0.094516,  0.029972], 
[ 0.027383,  0.029077], 
[ 0.093876,  0.028388], 
[ 0.093162,  0.028242], 
[ 0.037910,  0.029016], 
[ 0.044773,  0.028790], 
[ 0.051295,  0.028610], 
[ 0.029925,  0.028698], 
[ 0.041286,  0.028037], 
[ 0.051225,  0.027518], 
[ 0.034361,  0.027391], 
[ 0.052674,  0.026282], 
[ 0.070155,  0.026270], 
[ 0.024920,  0.025765], 
[ 0.078609,  0.027734], 
[ 0.067337,  0.027603], 
[ 0.043526,  0.027312], 
[ 0.065378,  0.025093], 
[ 0.070941,  0.025531], 
[ 0.103512,  0.025986], 
[ 0.057179,  0.025308], 
[ 0.051594,  0.026676], 
[ 0.096408,  0.026124], 
[ 0.071389,  0.026944], 
[ 0.033353,  0.026201], 
[ 0.106369,  0.027436], 
[ 0.037306,  0.026216], 
[ 0.044880,  0.025993], 
[ 0.046598,  0.028577], 
[ 0.081090,  0.029458], 
[ 0.040817,  0.030881], 
[ 0.045754,  0.027673], 
[ 0.035886,  0.025591], 
[ 0.066952,  0.026753], 
[ 0.061804,  0.028300], 
[ 0.100374,  0.027069], 
[ 0.045154,  0.027823], 
[ 0.047779,  0.028133], 
[ 0.034701,  0.029019], 
[ 0.048127,  0.030660], 
[ 0.109786,  0.030750], 
[ 0.090291,  0.030393], 
[ 0.083187,  0.031707], 
[ 0.055792,  0.032514], 
[ 0.098488,  0.033741], 
[ 0.074412,  0.031846], 
[ 0.038907,  0.029996], 
[ 0.072045,  0.030140], 
[ 0.045224,  0.033317], 
[ 0.100422,  0.033263], 
[ 0.044232,  0.034655], 
[ 0.047962,  0.035521], 
[ 0.084603,  0.036935], 
[ 0.073178,  0.033100], 
[ 0.033445,  0.034551], 
[ 0.077816,  0.035688], 
[ 0.054333,  0.035114], 
[ 0.052988,  0.035172], 
[ 0.034046,  0.039658], 
[ 0.109265,  0.035951], 
[ 0.055863,  0.035548], 
[ 0.066644,  0.036002], 
[ 0.088295,  0.037203], 
[ 0.041142,  0.034392], 
[ 0.044800,  0.035432], 
[ 0.078641,  0.036270], 
[ 0.046099,  0.038326], 
[ 0.107253,  0.039141], 
[ 0.037194,  0.037656], 
[ 0.068115,  0.037019], 
[ 0.059572,  0.034108], 
[ 0.082504,  0.036469], 
[ 0.060427,  0.036234], 
[ 0.078436,  0.034312], 
[ 0.060161,  0.035591], 
[ 0.037013,  0.037051], 
[ 0.079523,  0.035366], 
[ 0.067297,  0.031346], 
[ 0.080723,  0.031202], 
[ 0.047240,  0.031055], 
[ 0.049752,  0.029875], 
[ 0.029381,  0.030022], 
[ 0.075516,  0.030587]
        ])
    #m = data[:, 1]
    #mm = data[:, 0]
    #data[:, 0] = m
    #data[:, 1] = mm
    #np.swapaxes(data, 0, 1)
    du.plot_data(dates, data*100.0, figsize=(21, 12), labels=['Neural Network', 'Global optimizer'], 
                 save=du.data_dir + 'rnn_vola_error_fnn.eps',
                     legend_fontsize=22, legend_color='black', 
                     xlabel_fontsize=22, xlabel_color='black', 
                     ylabel_fontsize=22, ylabel_color='black',
                     xtick_fontsize=18, xtick_color='black', 
                     yticks_format='{:.2f} %', 
                     ytick_fontsize=18, ytick_color='black',
                     title='Average Volatility Error', title_fontsize=26,
                     colors=('#67a9cf', '#ef8a62'),
                    out_of_sample=130)


#model = nn.read_model('../data/swo_gbp_hull_white_analytic_formulae_nn_s140000.p')
#swo = inst.get_swaptiongen(inst.hullwhite_analytic)
#orig_errors, errors = swo.errors(model, '2013-01-01')
#    
#orig_errors = orig_errors.reshape(12, 13)
#errors = errors.reshape(12, 13)
#    
#red_blue = red_purple = brewer2mpl.get_map('RdBu', 'Diverging', 7).mpl_colormap
#fig, ax = ppl.subplots(1)
#ppl.pcolormesh(fig, ax, orig_errors,
#               xticklabels=swo.axis(0).values, 
#               yticklabels=swo.axis(1).values,
#               cmap=red_blue)
#fig, ax = ppl.subplots(1)
#ppl.pcolormesh(fig, ax, errors,
#               xticklabels=swo.axis(0).values, 
#               yticklabels=swo.axis(1).values,
#               cmap=red_blue)

#X, Y, Z = plot4()
#g2_plot_all()
#objectives, lim_alpha, lim_beta = g2_objective_graph()
#(npv, vola) = g2_objective_graph()
rnn_optimizer()